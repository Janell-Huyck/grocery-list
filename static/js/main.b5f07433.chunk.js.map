{"version":3,"sources":["hooks/useList.js","components/item.js","components/addItem.js","App.js","serviceWorker.js","index.js"],"names":["useList","init","useState","list","setList","removeItem","index","copyList","splice","saveItem","trait","newVal","addItem","item","push","toggle","targetItem","removePurchased","filter","purchased","Item","props","Row","data-status","className","name","onClick","quantityEditable","type","defaultValue","quantity","onKeyPress","e","onDoubleClick","nameEditable","editItem","AddItem","newQuantity","setNewQuantity","newName","setNewName","quantityRef","useRef","itemNameRef","addItemRef","clearRef","useEffect","current","focus","handleInput","target","value","handleKeyPress","key","console","log","addNewItem","clearNewHandle","Form","Group","Label","ref","placeholder","onChange","Button","initialList","App","items","removeItemHandle","toggleHandle","keyPressHandle","newValue","editItemsHandle","Container","map","i","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b5f07433.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction useList(init) {\n  const [list, setList] = useState(init);\n\n  return {\n    list,\n    removeItem(index) {\n      let copyList = [...list];\n      copyList.splice(index, 1);\n      setList(copyList);\n    },\n    saveItem(index, trait, newVal) {\n      let copyList = [...list];\n      copyList[index][trait] = newVal;\n      setList(copyList);\n    },\n    addItem(item) {\n      let copyList = [...list];\n      copyList.push(item);\n      setList(copyList);\n    },\n    toggle(index, trait) {\n      let copyList = [...list];\n      let targetItem = copyList[index];\n      targetItem[trait] = !targetItem[trait];\n      setList(copyList);\n    },\n    removePurchased() {\n      let copyList = list.filter(function (item) {\n        return !item.purchased;\n      });\n      setList(copyList);\n    },\n  };\n}\n\nexport default useList;\n","import React from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction Item(props) {\n  return (\n    <Row\n      data-status={props.item.purchased}\n      className=\"col-xs-12 item-style shadow-sm bg-light rounded mb-1 \"\n    >\n      <button\n        name={props.item.name}\n        className=\"fa fa-check-square btn-success edit-button\"\n        onClick={() => props.toggle(props.index, \"purchased\")}\n      >\n        Purchase\n      </button>\n\n      {props.item.quantityEditable ? (\n        <input\n          type=\"text\"\n          defaultValue={props.item.quantity}\n          onKeyPress={(e) => props.onKeyPress(e, props.index, \"quantity\")}\n        />\n      ) : (\n        <div\n          className={\n            props.item.purchased ? \"purchased item-quantity\" : \"item-quantity\"\n          }\n          onDoubleClick={() => props.toggle(props.index, \"quantityEditable\")}\n        >\n          {props.item.quantity && <>{props.item.quantity}</>}\n          {!props.item.quantity && <></>}\n        </div>\n      )}\n\n      {props.item.nameEditable ? (\n        <input\n          type=\"text\"\n          defaultValue={props.item.name}\n          onKeyPress={(e) => props.onKeyPress(e, props.index, \"name\")}\n        />\n      ) : (\n        <div\n          className={props.item.purchased ? \"purchased item-name\" : \"item-name\"}\n          onDoubleClick={() => props.toggle(props.index, \"nameEditable\")}\n        >\n          {props.item.name && (\n            <div className=\"name-text\">{props.item.name}</div>\n          )}\n          {!props.item.name && <>Enter Item</>}\n        </div>\n      )}\n      <button\n        name={props.item.name}\n        className=\"fa fa-pencil-square btn-secondary edit-button\"\n        onClick={() => props.editItem(props.index)}\n      >\n        Edit\n      </button>\n      <button\n        name={props.item.name}\n        className=\"fa fa-trash-o btn-danger remove-button ml-auto\"\n        onClick={() => props.removeItem(props.index)}\n      >\n        Remove\n      </button>\n    </Row>\n  );\n}\n\nexport default Item;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nconst initialNewQuantity = \"\";\nconst initialNewName = \"\";\n\nconst AddItem = (props) => {\n  const [newQuantity, setNewQuantity] = useState(initialNewQuantity);\n  const [newName, setNewName] = useState(initialNewName);\n\n  const quantityRef = useRef();\n  const itemNameRef = useRef();\n  const addItemRef = useRef();\n  const clearRef = useRef();\n\n  useEffect(() => {\n    quantityRef.current.focus();\n  }, []);\n\n  const handleInput = (e, trait) => {\n    if (trait === \"quantity\") {\n      setNewQuantity(e.target.value);\n    } else if (trait === \"name\") {\n      setNewName(e.target.value);\n    }\n  };\n\n  const handleKeyPress = (e, trait) => {\n    if (e.key === \"Enter\") {\n      if (trait === \"quantity\") {\n        console.log(\"quantity enter\");\n        itemNameRef.current.focus();\n      }\n      if (trait === \"name\") {\n        console.log(\"name enter\");\n        props.addNewItem(newQuantity, newName);\n        clearNewHandle();\n        quantityRef.current.focus();\n      }\n    }\n  };\n\n  const clearNewHandle = () => {\n    setNewQuantity(initialNewQuantity);\n    setNewName(initialNewName);\n  };\n\n  return (\n    <Form.Row className=\" d-flex flex-column col-6 shadow-sm bg-light rounded mb-1 border border-dark p-2 m-2\">\n      <h2 className=\"text-center\">Add Item</h2>\n      <Form.Row className=\"justify-content-center\">\n        <Form.Group className=\"d-flex flex-column col-2\">\n          <Form.Label>Qty.</Form.Label>\n          <input\n            type=\"text\"\n            ref={quantityRef}\n            placeholder={\"#\"}\n            value={newQuantity}\n            onKeyPress={(e) => handleKeyPress(e, \"quantity\")}\n            onChange={(e) => handleInput(e, \"quantity\")}\n          ></input>\n        </Form.Group>\n        <Form.Group className=\"d-flex flex-column col-8\">\n          <Form.Label>Item Name</Form.Label>\n          <input\n            type=\"text\"\n            ref={itemNameRef}\n            placeholder={\"Item name\"}\n            value={newName}\n            onKeyPress={(e) => handleKeyPress(e, \"name\")}\n            onChange={(e) => handleInput(e, \"name\")}\n          ></input>\n        </Form.Group>\n      </Form.Row>\n      <Form.Group className=\"d-flex justify-content-around\">\n        <Button\n          onClick={() => {\n            props.addNewItem(newQuantity, newName);\n            clearNewHandle();\n          }}\n          ref={addItemRef}\n        >\n          Add\n        </Button>\n        <Button onClick={clearNewHandle} ref={clearRef}>\n          Clear\n        </Button>\n      </Form.Group>\n    </Form.Row>\n  );\n};\n\nexport default AddItem;\n","import React from \"react\";\nimport \"./App.css\";\nimport useList from \"./hooks/useList\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Button } from \"react-bootstrap\";\n\nimport Item from \"./components/item\";\nimport AddItem from \"./components/addItem\";\n\nconst initialList = [];\n\nfunction App() {\n  let items = useList(initialList);\n\n  const removeItemHandle = (index) => {\n    items.removeItem(index);\n  };\n\n  const toggleHandle = (index, trait) => {\n    items.toggle(index, trait);\n  };\n\n  const keyPressHandle = (e, index, trait) => {\n    if (e.key === \"Enter\") {\n      let newValue = e.target.value;\n      if (trait === \"name\") {\n        toggleHandle(index, \"nameEditable\");\n      } else if (trait === \"quantity\") {\n        toggleHandle(index, \"quantityEditable\");\n      }\n      items.saveItem(index, trait, newValue);\n    }\n  };\n\n  const addNewItem = (quantity, name) => {\n    items.addItem({ quantity: quantity, name: name });\n  };\n\n  const editItemsHandle = (index) => {\n    items.toggle(index, \"nameEditable\");\n    items.toggle(index, \"quantityEditable\");\n  };\n\n  const removePurchased = () => {\n    items.removePurchased();\n  };\n\n  return (\n    <Container>\n      <Row className=\"col-xs-12 font-weight-bold\">\n        <h2 className=\"m-auto\">Grocery List</h2>\n        <Button className=\"btn-success p-2 m-5\" onClick={removePurchased}>\n          Remove Purchased\n        </Button>\n      </Row>\n      {items.list.map((value, i) => {\n        return (\n          <Item\n            key={`${i}${value.name}`}\n            item={value}\n            removeItem={removeItemHandle}\n            toggle={toggleHandle}\n            onKeyPress={keyPressHandle}\n            index={i}\n            editItem={editItemsHandle}\n          ></Item>\n        );\n      })}\n      <AddItem addNewItem={addNewItem} />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}